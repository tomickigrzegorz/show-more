{"version":3,"file":"showMore.min.js","sources":["../sources/utils/function.js","../sources/utils/regex.js","../sources/utils/defaults.js","../sources/index.js"],"sourcesContent":["/**\r\n * Get hidden element\r\n *\r\n * @param {object} object\r\n * @param {String} type - type of element table | div\r\n * @returns\r\n */\r\nexport const getNumber = ({ rows, children }, type) => {\r\n  const elementType = type === \"table\" ? rows : children;\r\n\r\n  const numbersElementHidden = [].slice\r\n    .call(elementType)\r\n    .filter((el) => el.classList.contains(\"hidden\")).length;\r\n  return numbersElementHidden !== 0 ? ` ${numbersElementHidden}` : \"\";\r\n};\r\n\r\n// https://stackoverflow.com/questions/6003271/substring-text-with-html-tags-in-javascript\r\n/**\r\n * Substring text width html tags\r\n *\r\n * @param {String} originalText - text with html tags\r\n * @param {String} count - limit of characters\r\n * @returns\r\n */\r\nexport const htmlSubstr = (originalText, count) => {\r\n  let div = createElement(\"div\");\r\n  div.insertAdjacentHTML(\"afterbegin\", originalText);\r\n\r\n  walk(div, track);\r\n\r\n  function track(el) {\r\n    if (count > 0) {\r\n      let len = el.data.length;\r\n      count -= len;\r\n      if (count <= 0) {\r\n        el.data = el.substringData(0, el.data.length + count);\r\n      }\r\n    } else {\r\n      el.data = \"\";\r\n    }\r\n  }\r\n\r\n  function walk(el, fn) {\r\n    let node = el.firstChild;\r\n    do {\r\n      if (node.nodeType === 3) {\r\n        fn(node);\r\n      } else if (node.nodeType === 1 && node.childNodes && node.childNodes[0]) {\r\n        walk(node, fn);\r\n      }\r\n    } while ((node = node.nextSibling));\r\n  }\r\n  return div.innerHTML;\r\n};\r\n\r\n/**\r\n * Add/remove class 'hidden' to element\r\n *\r\n * @param {HTMLElement} element\r\n * @param {String} type - type of element add or remove\r\n */\r\nexport const addRemoveClass = (element, type = false) => {\r\n  return element.classList[type ? \"add\" : \"remove\"](\"hidden\");\r\n};\r\n\r\n/**\r\n * Set attributes to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {Object} object\r\n */\r\nexport const setAttributes = (el, object) => {\r\n  for (let key in object) {\r\n    el.setAttribute(key, object[key]);\r\n  }\r\n};\r\n\r\n/**\r\n * Create element\r\n *\r\n * @param {String} type - type of element\r\n * @returns {HTMLElement}\r\n */\r\nexport const createElement = (type) => document.createElement(type);\r\n","/**\r\n * Default regexes for validation\r\n */\r\nexport const defaultRegex = {\r\n  newLine: {\r\n    match: /(\\r\\n|\\n|\\r)/gm,\r\n    replace: \"\",\r\n  },\r\n  space: {\r\n    match: /\\s\\s+/gm,\r\n    replace: \" \",\r\n  },\r\n  br: {\r\n    match: /<br\\s*\\/?>/gim,\r\n    replace: \"\",\r\n  },\r\n  html: {\r\n    match: /(<((?!b|\\/b|!strong|\\/strong)[^>]+)>)/gi,\r\n    replace: \"\",\r\n  },\r\n};\r\n","export const defaultOptions = {\r\n  typeElement: \"span\",\r\n  more: false,\r\n  less: false,\r\n  number: false,\r\n  nobutton: false,\r\n  after: 0,\r\n  btnClass: \"show-more-btn\",\r\n  btnClassAppend: null,\r\n};\r\n","import {\r\n  addRemoveClass,\r\n  createElement,\r\n  getNumber,\r\n  htmlSubstr,\r\n  setAttributes,\r\n} from \"./utils/function\";\r\nimport { defaultRegex } from \"./utils/regex\";\r\nimport { defaultOptions } from \"./utils/defaults\";\r\n\r\n/**\r\n * @class ShowMore\r\n */\r\nexport default class ShowMore {\r\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {HTMLElement} className\r\n   * @param {Object} object\r\n   */\r\n  constructor(className, { onMoreLess = () => {}, regex = {}, config } = {}) {\r\n    // all html elements\r\n    const elements = [].slice.call(document.querySelectorAll(className));\r\n\r\n    // colback function\r\n    this._onMoreLess = onMoreLess;\r\n\r\n    // global regex\r\n    this._regex = { ...defaultRegex, ...regex };\r\n\r\n    elements.map((item, index) => {\r\n      const configData = JSON.parse(item.getAttribute(\"data-config\"));\r\n      const configGlobal = config;\r\n\r\n      const configDataAndGlobal = { ...configGlobal, ...configData };\r\n\r\n      this._object = {\r\n        index,\r\n        classArray: item.classList,\r\n        ...defaultOptions,\r\n        ...configDataAndGlobal,\r\n        typeElement: configDataAndGlobal.element || \"span\",\r\n        element: item,\r\n      };\r\n\r\n      this._initial();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Initail function\r\n   *\r\n   * @param {Object} object\r\n   */\r\n  _initial = () => {\r\n    const { element, after, ellipsis, nobutton, limit, type } = this._object;\r\n    // set default aria-expande to false\r\n    setAttributes(element, { \"showmore-expanded\": \"false\" });\r\n\r\n    const limitCounts = limit + after;\r\n    const ellips = ellipsis === false ? \"\" : \"...\";\r\n\r\n    // console.log(nobutton);\r\n\r\n    // text\r\n    if (type === \"text\") {\r\n      const originalText = element.innerHTML.trim();\r\n      const elementText = element.textContent.trim();\r\n\r\n      if (elementText.length > limitCounts) {\r\n        let orgTexReg = originalText;\r\n\r\n        for (let key in this._regex) {\r\n          const { match, replace } = this._regex[key];\r\n          if (key && match) orgTexReg = orgTexReg.replace(match, replace);\r\n        }\r\n\r\n        const truncatedText = htmlSubstr(orgTexReg, limit - 1).concat(ellips);\r\n\r\n        element.textContent = \"\";\r\n        element.insertAdjacentHTML(\"beforeend\", truncatedText);\r\n\r\n        this._clickEvent(element, {\r\n          ...this._object,\r\n          originalText,\r\n          truncatedText,\r\n        });\r\n\r\n        if (nobutton) return;\r\n        this._addBtn(this._object);\r\n      }\r\n    }\r\n\r\n    // list and table\r\n    if (type === \"list\" || type === \"table\") {\r\n      const items = this._getNumberCount(element, type);\r\n\r\n      if (items.length > limitCounts) {\r\n        for (let i = limit; i < items.length; i++) {\r\n          addRemoveClass(items[i], true);\r\n        }\r\n\r\n        if (!nobutton) {\r\n          // add button to the list and table\r\n          this._addBtn(this._object);\r\n        }\r\n\r\n        // add event click\r\n        this._clickEvent(\r\n          type === \"list\" ? element : element.nextElementSibling,\r\n          this._object,\r\n        );\r\n\r\n        if (nobutton) return;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Event click\r\n   *\r\n   * @param {HTMLElement} element\r\n   * @param {Object} object\r\n   */\r\n  _clickEvent = (element, object) =>\r\n    element.addEventListener(\"click\", this._handleEvent.bind(this, object));\r\n\r\n  /**\r\n   * Create button\r\n   *\r\n   * @param {Object} object\r\n   * @returns HTMLElement\r\n   */\r\n  _createBtn = ({\r\n    element,\r\n    number,\r\n    less,\r\n    more,\r\n    type,\r\n    btnClass,\r\n    btnClassAppend,\r\n  }) => {\r\n    const typeAria = this._checkExp ? less || \"\" : more || \"\";\r\n    let label = this._checkExp\r\n      ? less.trim() || \"collapse\"\r\n      : more.trim() || \"expand\";\r\n\r\n    label = number ? label + getNumber(element, type) : label;\r\n\r\n    const expanded = this._checkExp ? true : false;\r\n\r\n    const button = createElement(\"button\");\r\n\r\n    button.className =\r\n      btnClassAppend == null ? btnClass : btnClass + \" \" + btnClassAppend;\r\n    setAttributes(button, {\r\n      \"aria-expanded\": expanded,\r\n      \"aria-label\": label,\r\n      tabindex: 0,\r\n    });\r\n\r\n    button.insertAdjacentHTML(\r\n      \"beforeend\",\r\n      number ? typeAria + getNumber(element, type) : typeAria,\r\n    );\r\n\r\n    return button;\r\n  };\r\n\r\n  /**\r\n   * Event handler\r\n   *\r\n   * @param {Object} object\r\n   * @param {Event} event\r\n   */\r\n  _handleEvent = (object, { target }) => {\r\n    const {\r\n      element,\r\n      type,\r\n      limit,\r\n      less,\r\n      typeElement,\r\n      originalText,\r\n      truncatedText,\r\n      btnClass,\r\n    } = object;\r\n\r\n    // check if the button is clicked\r\n    const checkContainsClass = target.classList.contains(btnClass);\r\n\r\n    if (!checkContainsClass) return;\r\n\r\n    const showMoreExpanded = element.getAttribute(\"showmore-expanded\");\r\n    this._checkExp = showMoreExpanded === \"false\";\r\n\r\n    // --------------------------------------------------\r\n    // text\r\n    if (type === \"text\" && checkContainsClass) {\r\n      element.textContent = \"\";\r\n\r\n      element.insertAdjacentHTML(\r\n        \"beforeend\",\r\n        this._checkExp ? originalText : truncatedText,\r\n      );\r\n\r\n      if (less) {\r\n        const el = createElement(typeElement);\r\n        el.classList.add(\"show-more-wrapper\");\r\n        el.insertAdjacentElement(\"beforeend\", this._createBtn(object));\r\n        element.appendChild(el);\r\n      }\r\n    }\r\n\r\n    // --------------------------------------------------\r\n    // list and table\r\n    if (type === \"list\" || type === \"table\") {\r\n      const items = this._getNumberCount(element, type);\r\n\r\n      for (let i = 0; i < items.length; i++) {\r\n        const typeRemove =\r\n          type === \"list\" ? i >= limit && i < items.length - 1 : i >= limit;\r\n\r\n        if (showMoreExpanded === \"false\") {\r\n          addRemoveClass(items[i]);\r\n        } else if (typeRemove) {\r\n          addRemoveClass(items[i], true);\r\n        }\r\n      }\r\n    }\r\n\r\n    // set aria-expanded\r\n    if (type) {\r\n      this._setExpand({ ...object, target });\r\n    }\r\n  };\r\n\r\n  _getNumberCount = (element, type) => {\r\n    return type === \"list\" ? [].slice.call(element.children) : element.rows;\r\n  };\r\n\r\n  /**\r\n   * Add button\r\n   *\r\n   * @param {Object} object\r\n   */\r\n  _addBtn = (object) => {\r\n    const { type, element, more, typeElement } = object;\r\n\r\n    if (!more) return;\r\n\r\n    if (type === \"table\") {\r\n      element.insertAdjacentElement(\"afterend\", this._createBtn(object));\r\n    } else {\r\n      const el = createElement(typeElement);\r\n      el.classList.add(\"show-more-wrapper\");\r\n      el.appendChild(this._createBtn(object));\r\n      element.appendChild(el);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Set aria-expanded\r\n   *\r\n   * @param {Object} object\r\n   */\r\n  _setExpand = (object) => {\r\n    const { element, type, less, more, number, target } = object;\r\n\r\n    const typeAria = this._checkExp ? less : more;\r\n    const aria = this._checkExp ? \"expand\" : \"collapse\";\r\n    const lastChild = element.lastElementChild;\r\n\r\n    const ariaLabel = number ? typeAria + getNumber(element, type) : typeAria;\r\n\r\n    setAttributes(element, { \"showmore-expanded\": this._checkExp });\r\n    setAttributes(target, {\r\n      \"aria-expanded\": this._checkExp,\r\n      \"aria-label\": ariaLabel,\r\n    });\r\n\r\n    // callback function on more/less\r\n    this._onMoreLess(aria, object);\r\n\r\n    if (typeAria) {\r\n      target.innerHTML = number\r\n        ? typeAria + getNumber(element, type)\r\n        : typeAria;\r\n    } else if (type === \"table\") {\r\n      target.parentNode.removeChild(target);\r\n    } else if (type === \"list\") {\r\n      lastChild.parentNode.removeChild(lastChild);\r\n    }\r\n  };\r\n}\r\n"],"names":["getNumber","_ref","type","rows","children","elementType","numbersElementHidden","slice","call","filter","el","classList","contains","length","addRemoveClass","element","setAttributes","object","key","setAttribute","createElement","document","defaultRegex","newLine","match","replace","space","br","html","defaultOptions","typeElement","more","less","number","nobutton","after","btnClass","btnClassAppend","constructor","className","_temp","onMoreLess","regex","config","elements","querySelectorAll","this","_onMoreLess","_regex","map","item","index","configData","JSON","parse","getAttribute","configDataAndGlobal","_object","classArray","_initial","ellipsis","limit","limitCounts","ellips","originalText","innerHTML","trim","textContent","orgTexReg","truncatedText","htmlSubstr","count","div","insertAdjacentHTML","walk","fn","node","firstChild","nodeType","childNodes","nextSibling","len","data","substringData","concat","_clickEvent","_addBtn","items","_getNumberCount","i","nextElementSibling","addEventListener","_handleEvent","bind","_createBtn","typeAria","_checkExp","label","expanded","button","tabindex","_ref2","target","checkContainsClass","showMoreExpanded","add","insertAdjacentElement","appendChild","typeRemove","_setExpand","aria","lastChild","lastElementChild","ariaLabel","parentNode","removeChild"],"mappings":"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"}